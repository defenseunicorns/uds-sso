name: Test UDS SSO

on:
  push:
  pull_request:
    branches: [ "main" ]

permissions:
  id-token: write
  contents: read

jobs:
  test-clean-install:
    runs-on: ubuntu-latest

    steps:

      - name: Fail if Draft PR
        if: github.event.pull_request.draft == true
        run: exit 1

      - uses: actions/checkout@v4

      - uses: ./.github/actions/create-zarf-package
        with:
          username: ${{ secrets.REGISTRY1_USERNAME }}
          password: ${{ secrets.REGISTRY1_PASSWORD }}
          working-dir: sso
          download-init-package: true

      - name: Create k3d cluster
        id: create-cluster
        # renovate: datasource=github-tags depName=defenseunicorns/uds-aws-ci-k3d versioning=semver
        uses: defenseunicorns/uds-aws-ci-k3d@v0.0.3
        with:
          cluster-action: create
          aws-assume-role: ${{ secrets.AWS_COMMERCIAL_ROLE_TO_ASSUME }}
          aws-region: us-west-2

      - name: Install uds-cli
        uses: supplypike/setup-bin@v3
        with:
          # renovate: uds-cli-uri datasource=github-tags depName=defenseunicorns/uds-cli
          uri: 'https://github.com/defenseunicorns/uds-cli/releases/download/v0.0.4-alpha/uds-cli_v0.0.4-alpha_Linux_amd64 '
          name: 'uds'
          # renovate: datasource=github-tags depName=defenseunicorns/uds-cli versioning=semver
          version: 'v0.0.4-alpha'

      - name: UDS CLI Bundle Creation
        working-directory: dev
        run: uds bundle create --set INIT_VERSION=v0.29.2 --set METALLB_VERSION=0.0.1 --set DUBBD_VERSION=0.9.0 --set IDAM_VERSION=0.1.9 --confirm

      - name: CLI Bundle Deployment
        working-directory: dev
        run: uds bundle deploy uds-bundle-uds-sso-*.tar.zst --confirm

      - name: Teardown k3d cluster
        if: always()
        # renovate: datasource=github-tags depName=defenseunicorns/uds-aws-ci-k3d versioning=semver
        uses: defenseunicorns/uds-aws-ci-k3d@v0.0.3
        with:
          cluster-action: destroy